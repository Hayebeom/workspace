<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<context:annotation-config></context:annotation-config>
	
	<!-- 
		 지정된 패키지 및 하위 패키지에서 @Component, @Controller,
		 @ControllerAdvice, @RestContorller, @Service @Repository 등의
		 Annotation이 부착된 모든 클래스를 검색해서 자동으로 스프링 컨테이너가 객체를 생성함
	-->
	<context:component-scan base-package="kr.co.jhta.di"></context:component-scan>
	<!--
		위 한줄로 인해서 
		<bean id="sms" class="x.y.z.SmsMessageSender">
			<property name="company" value="SKT"></property>
		</bean> 을 생략 하게됨
	 -->
	 
	 <!-- 
		  location으로 지정된 경로의 spring.properties 파일을 읽어와서 
 	 	   파일의 내용을 key와 value로 구분, 그 정보를 가진 객체를 스프링 컨테이너가 생성함
 	 	   그 정보는 아래와 같이 사용됨
 	 	   
 	 	  * 객체 생성을 수동으로 설정하는 경우
 	 	  <bean class="x.y.z.SmsMessageSender">
 	 	  		<property name="company" value="${message.sender.sms.company}"/>
 	 	  </bean>
 	 	  
 	 	  * 객체 생성을 자동으로 설정하는 경우
 	 	  @Component
 	 	  public class SmsMessageSender implements MessageSender {
 	 	  		@Value("${message.sender.sms.company}")
 	 	  		private String company;
 	 	  }
	  -->
	 <context:property-placeholder location="classpath:/config/spring.properties"/>
</beans>

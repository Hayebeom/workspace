<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.jhta.dao.BlogDao">

	<!-- 
		 "writer.id",	 User 객체의 id에 값이 저장
		 "writer.name",	 User 객체의 name에 값이 저장
		 "writer.email", User 객체의 email에 값이 저장
	 -->
	 
	 <select id="getBlogs" resultType="Blog">
	 	select
	 		A.blog_no				as	no,
	 		A.blog_title			as	title,
	 		B.blog_writer			as	"writer.id",
	 		B.user_name				as	"writer.name",
	 		B.user_email			as	"writer.email",
	 		A.blog_content			as	content,
	 		A.blog_likes			as	likes,
	 		A.blog_comment_counts	as	commentCounts,
	 		A.blog_create_date		as	createDate
	 	from
	 		spring_blogs A, spring_users B
	 	where
	 		A.blog_writer = B.user_id
	 	order by
	 		A.blog_no asc
	 </select>
	 
	 <select id="getBlogsByWriter" parameterType="string" resultType="Blog">
	 	select
	 		A.blog_no				as	no,
	 		A.blog_title			as	title,
	 		B.blog_writer			as	"writer.id",
	 		B.user_name				as	"writer.name",
	 		B.user_email			as	"writer.email",
	 		A.blog_content			as	content,
	 		A.blog_likes			as	likes,
	 		A.blog_comment_counts	as	commentCounts,
	 		A.blog_create_date		as	createDate
	 	from
	 		spring_blogs A, spring_users B
	 	where
	 		A.blog_writer = B.user_id
	 		AND A.blog_writer = #{value}
	 </select>
	 
	<select id="getBlogByNo" parameterType="int" resultType="Blog">
		select
			A.blog_no				as no,
			A.blog_title			as title,
			A.blog_writer			as "writer.id",
			B.user_name				as "writer.name",
			B.user_email			as "writer.email",
			A.blog_content			as content,
			A.blog_likes			as likes,
			A.blog_comment_counts	as commentCounts,
			A.blog_create_date		as createDate
		from
			spring_blogs A, spring_users B
		where
			A.blog_writer = B.user_id
			AND A.blog_no = #{value}
	</select>
	
	<!-- 
		#{writer.id} : blog.getWriter().getId()
	 -->
	<insert id="insertBlog" parameterType="Blog">
		insert into spring_blogs
		(blog_no, blog_title, blog_writer, blog_content)
		values
		(spring_blog_seq.nextval, #{title}, #{writer.id}, #{content})
	</insert>
	
	<update id="updateBlog" parameterType="Blog">
	 	update
	 		spring_blogs
	 	set
	 		blog_title = #{title},
	 		blog_writer = #{writer.id},
	 		blog_content = #{content},
	 		blog_likes = #{likes},
	 		blog_comment_counts = #{commentCounts}
	 	where
	 		blog_no = #{no}
	</update>
	 
	<delete id="deleteBlogByNo" parameterType="int">
	 	delete
	 	from
	 		spring_blogs
	 	where
	 		blog_no = #{value}
	</delete>
	 
	<delete id="deleteBlogsByWriter" parameterType="string">
		delete
		from
			spring_blogs
		where
			blog_writer = #{value}
	</delete>
</mapper>
